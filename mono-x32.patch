diff -ur mono-3.12.0/libgc/include/private/gc_locks.h mono-3.12.0-x32/libgc/include/private/gc_locks.h
--- mono-3.12.0/libgc/include/private/gc_locks.h	2014-10-30 23:11:01.000000000 +0100
+++ mono-3.12.0-x32/libgc/include/private/gc_locks.h	2015-03-13 19:53:30.391221738 +0100
@@ -437,7 +437,7 @@
 						       GC_word new_val) 
          {
 	   char result;
-	   __asm__ __volatile__("lock; cmpxchgq %2, %0; setz %1"
+	   __asm__ __volatile__("lock; cmpxchg %2, %0; setz %1"
 	    	: "+m"(*(addr)), "=r"(result)
 		: "r" (new_val), "a"(old) : "memory");
 	   return (GC_bool) result;
diff -ur mono-3.12.0/mono/metadata/decimal.c mono-3.12.0-x32-2/mono/metadata/decimal.c
--- mono-3.12.0/mono/metadata/decimal.c	2014-12-03 12:25:48.000000000 +0100
+++ mono-3.12.0-x32-2/mono/metadata/decimal.c	2015-03-13 20:27:27.291292654 +0100
@@ -566,7 +566,7 @@
 	__asm__("bsrl %1,%0\n\t"
 			: "=r" (r) : "rm" (mask));
 	return r;
-#elif defined(__x86_64) && defined(__GNUC__)
+#elif defined(__x86_64) && defined(__GNUC__) && !defined(__ILP32__)
 	guint64 r;
 
 	__asm__("bsrq %1,%0\n\t"
Only in mono-3.12.0-x32-2/mono/metadata: decimal.c~
diff -ur mono-3.12.0/mono/metadata/sgen-cardtable.c mono-3.12.0-x32-2/mono/metadata/sgen-cardtable.c
--- mono-3.12.0/mono/metadata/sgen-cardtable.c	2015-01-12 18:15:08.000000000 +0100
+++ mono-3.12.0-x32-2/mono/metadata/sgen-cardtable.c	2015-03-13 20:28:38.011295116 +0100
@@ -506,7 +506,7 @@
 /*XXX Use assembly as this generates some pretty bad code */
 #if defined(__i386__) && defined(__GNUC__)
 	return  (__builtin_ffs (card) - 1) / 8;
-#elif defined(__x86_64__) && defined(__GNUC__)
+#elif defined(__x86_64__) && defined(__GNUC__) && !defined(__ILP32__)
 	return (__builtin_ffsll (card) - 1) / 8;
 #elif defined(__s390x__)
 	return (__builtin_ffsll (GUINT64_TO_LE(card)) - 1) / 8;
Only in mono-3.12.0-x32-2/mono/metadata: sgen-cardtable.c~
diff -ur mono-3.12.0/mono/metadata/sgen-marksweep.c mono-3.12.0-x32-2/mono/metadata/sgen-marksweep.c
--- mono-3.12.0/mono/metadata/sgen-marksweep.c	2015-01-12 18:15:08.000000000 +0100
+++ mono-3.12.0-x32-2/mono/metadata/sgen-marksweep.c	2015-03-13 20:26:38.467957621 +0100
@@ -1750,7 +1750,7 @@
 
 #if defined(__i386__) && defined(__GNUC__)
 	return card_data + i * 4 +  (__builtin_ffs (card) - 1) / 8;
-#elif defined(__x86_64__) && defined(__GNUC__)
+#elif defined(__x86_64__) && defined(__GNUC__) && !defined(__ILP32__)
 	return card_data + i * 8 +  (__builtin_ffsll (card) - 1) / 8;
 #elif defined(__s390x__) && defined(__GNUC__)
 	return card_data + i * 8 +  (__builtin_ffsll (GUINT64_TO_LE(card)) - 1) / 8;
Only in mono-3.12.0-x32-2/mono/metadata: sgen-marksweep.c~
diff -ur mono-3.12.0/mono/mini/mini-codegen.c mono-3.12.0-x32-2/mono/mini/mini-codegen.c
--- mono-3.12.0/mono/mini/mini-codegen.c	2015-01-12 18:15:08.000000000 +0100
+++ mono-3.12.0-x32-2/mono/mini/mini-codegen.c	2015-03-13 20:24:21.044619503 +0100
@@ -164,7 +164,7 @@
 {
 	regmask_t mask = allow & rs->ifree_mask;
 
-#if defined(__x86_64__) && defined(__GNUC__)
+#if defined(__x86_64__) && defined(__GNUC__) && !defined(__ILP32__)
  {
 	guint64 i;
 
Only in mono-3.12.0-x32-2/mono/mini: mini-codegen.c~
diff -ur mono-3.12.0/mono/mini/regalloc.h mono-3.12.0-x32-2/mono/mini/regalloc.h
--- mono-3.12.0/mono/mini/regalloc.h	2014-10-30 23:11:02.000000000 +0100
+++ mono-3.12.0-x32-2/mono/mini/regalloc.h	2015-03-13 20:23:14.031283837 +0100
@@ -1,4 +1,4 @@
-#if defined(__native_client__) && defined(__x86_64__)
+#if defined(__native_client__) && defined(__x86_64__) && !defined(__ILP32__)
 typedef guint64 regmask_t;
 #else
 typedef size_t regmask_t;
Only in mono-3.12.0-x32-2/mono/mini: regalloc.h~
diff -ur mono-3.12.0/mono/utils/monobitset.c mono-3.12.0-x32-2/mono/utils/monobitset.c
--- mono-3.12.0/mono/utils/monobitset.c	2014-12-03 12:25:48.000000000 +0100
+++ mono-3.12.0-x32-2/mono/utils/monobitset.c	2015-03-13 20:31:41.054634822 +0100
@@ -289,7 +289,7 @@
 			 : "=r" (r) : "g" (mask)); 
 	 return nth_bit + r;
  }
-#elif defined(__x86_64) && defined(__GNUC__)
+#elif defined(__x86_64) && defined(__GNUC__) && !defined(__ILP32__)
  {
 	guint64 r;
 
@@ -317,7 +317,7 @@
 	__asm__("bsfl %1,%0\n\t"
 			: "=r" (r) : "rm" (mask));
 	return r;
-#elif defined(__x86_64) && defined(__GNUC__)
+#elif defined(__x86_64) && defined(__GNUC__) && !defined(__ILP32__)
 	guint64 r;
 
 	__asm__("bsfq %1,%0\n\t"
